/* Complete Prisma schema */

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(cuid())
  username       String   @unique
  email          String   @unique
  passwordHash   String
  profileInfo    String?
  feedbackThreads FeedbackThread[]
  feedbackResponses FeedbackResponse[]
  notifications  Notification[]
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model FeedbackThread {
  id                 String          @id @default(cuid())
  user               User            @relation(fields: [userId], references: [id])
  userId             String
  companyName        String
  url                String?
  purpose            String
  technologies       String
  feedbackRequested  Boolean
  seekingBetaTesters Boolean
  additionalComments String?
  feedbackResponses  FeedbackResponse[]
  surveys            Survey[]
  promoCodes         PromoCode[]
  createdAt          DateTime        @default(now())
  updatedAt          DateTime        @updatedAt
}

model FeedbackResponse {
  id          String       @id @default(cuid())
  thread      FeedbackThread @relation(fields: [threadId], references: [id])
  threadId    String
  user        User         @relation(fields: [userId], references: [id])
  userId      String
  responseText String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model Survey {
  id        String       @id @default(cuid())
  thread    FeedbackThread @relation(fields: [threadId], references: [id])
  threadId  String
  surveyLink String
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
}

model PromoCode {
  id        String       @id @default(cuid())
  thread    FeedbackThread @relation(fields: [threadId], references: [id])
  threadId  String
  code      String
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
}

model Notification {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  message   String
  readStatus Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

@@index([username], name: "idx_username")
@@index([email], name: "idx_email")
@@index([userId], name: "idx_userId")
